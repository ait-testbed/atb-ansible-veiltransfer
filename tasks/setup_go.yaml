- name: Check if Go is already installed
  ansible.builtin.command: go version
  register: go_check
  failed_when: false
  changed_when: false

- name: Set current Go version fact (if installed)
  set_fact:
    current_go_version: "{{ go_check.stdout | regex_search('go([0-9.]+)', '\\1') }}"
  when: go_check.rc == 0

- name: Decide if Go upgrade is needed
  set_fact:
    go_upgrade_required: "{{ (current_go_version is not defined) or (current_go_version is version(go_version, '<')) }}"

- name: Remove existing Go installation if upgrade is needed
  ansible.builtin.file:
    path: /usr/local/go
    state: absent
  when: go_upgrade_required

- name: Download Go {{ go_version }} if upgrade is needed
  ansible.builtin.get_url:
    url: "{{ go_url }}"
    dest: "/tmp/{{ go_tarball }}"
    mode: '0644'
    use_proxy: yes
    validate_certs: yes
  when: go_upgrade_required

- name: Extract Go to /usr/local if upgrade is needed
  ansible.builtin.unarchive:
    src: "/tmp/{{ go_tarball }}"
    dest: /usr/local
    remote_src: yes
  when: go_upgrade_required

- name: Ensure Go is in the system PATH
  ansible.builtin.lineinfile:
    path: /etc/profile.d/go_path.sh
    line: 'export PATH=$PATH:/usr/local/go/bin'
    create: yes
    mode: '0755'