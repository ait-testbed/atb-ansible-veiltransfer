- name: Install veiltransfer server on  Attacker Host
  become: true
  vars:
    veiltransfer_user: "{{ veiltransfer_user }}"
    go_version: "1.22.12"
    go_tarball: "go{{ go_version }}.linux-amd64.tar.gz"
    go_url: "https://go.dev/dl/{{ go_tarball }}"
    server_binary_name: "veiltransfer_server_linux"
    client_binary_name: "veiltransfer_client_linux"
    install_bin_dir: "/usr/local/bin" 
  tasks:

    - name: Set permanent network buffer sizes in sysctl
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-buffer-sizes.conf
        content: |
          net.core.rmem_max=7500000
          net.core.wmem_max=7500000
        owner: root
        group: root
        mode: '0644'

    - name: Reload sysctl settings
      ansible.builtin.command: sysctl --system
      changed_when: true

    - name: Remove existing Go installation if present
      ansible.builtin.file:
        path: /usr/local/go
        state: absent

    - name: Download Go {{ go_version }}
      ansible.builtin.get_url:
        url: "{{ go_url }}"
        dest: "/tmp/{{ go_tarball }}"
        mode: '0644'
        use_proxy: yes
        validate_certs: yes

    - name: Extract Go to /usr/local
      ansible.builtin.unarchive:
        src: "/tmp/{{ go_tarball }}"
        dest: /usr/local
        remote_src: yes

    - name: Ensure Go is in the system PATH
      ansible.builtin.lineinfile:
        path: /etc/profile.d/go_path.sh
        line: 'export PATH=$PATH:/usr/local/go/bin'
        create: yes
        mode: '0755'

    - name: Clone the VeilTransfer repository
      become_user: "{{ veiltransfer_user }}"
      ansible.builtin.git:
        repo: "{{ veiltransfer_repo}}"
        dest: /home/{{ veiltransfer_user }}/VeilTransfer
        version: main
        update: yes

    - name: Run make server-linux
      become_user: "{{ veiltransfer_user }}"
      ansible.builtin.command:
        cmd: make server-linux
        chdir: /home/{{ veiltransfer_user }}/VeilTransfer
      environment:
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"

    - name: Run make client-linux
      become_user: "{{ veiltransfer_user }}"
      ansible.builtin.command:
        cmd: make client-linux
        chdir: /home/{{ veiltransfer_user }}/VeilTransfer
      environment:
        PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"

    - name: Make the built client binary executable
      ansible.builtin.file:
        path: /home/{{ veiltransfer_user }}/VeilTransfer/{{ client_binary_name }}
        mode: '0755'

    - name: Make the built server binary executable
      ansible.builtin.file:
        path: /home/{{ veiltransfer_user }}/VeilTransfer/{{ server_binary_name }}
        mode: '0755'

    - name: Generate server private key and CSR
      become: true
      become_user: "{{ veiltransfer_user }}"
      ansible.builtin.command:
        cmd: openssl req -newkey rsa:2048 -nodes -keyout server.key -out server.csr -subj "/CN=veiltransfer"
        chdir: /home/{{ veiltransfer_user }}
      creates: /home/{{ veiltransfer_user }}/server.key

    - name: Generate self-signed certificate from CSR
      become: true
      become_user: "{{ veiltransfer_user }}"
      ansible.builtin.command:
        cmd: openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
        chdir: /home/{{ veiltransfer_user }}
      creates: /home/{{ veiltransfer_user }}/server.crt

    - name: Restrict permissions on server.key
      ansible.builtin.file:
        path: /home/{{ veiltransfer_user }}/server.key
        mode: '0600'
        owner: "{{ veiltransfer_user }}"
        group: "{{ veiltransfer_user }}"

    - name: Move built binaries to system bin directory
      become: true
      become_user: root
      ansible.builtin.copy:
        remote_src: yes
        src: "/home/{{ veiltransfer_user }}/VeilTransfer/{{ item }}"
        dest: "/usr/bin/{{ item }}"
        mode: '0755'
      loop:
        - "{{ server_binary_name }}"
        - "{{ client_binary_name }}"

    - name: Create systemd service for veiltransfer server
      ansible.builtin.copy:
        dest: /etc/systemd/system/veiltransfer.service
        content: |
          [Unit]
          Description=VeilTransfer QUIC Server
          After=network.target

          [Service]
          ExecStart=/usr/bin/veiltransfer_server_linux quic -cert /home/{{ veiltransfer_user }}/server.crt -key /home/{{ veiltransfer_user }}/server.key -folder {{ veiltransfer_folder_path }}
          WorkingDirectory=/home/{{ veiltransfer_user }}
          Restart=on-failure
          User=root

          [Install]
          WantedBy=multi-user.target
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start veiltransfer service
      ansible.builtin.systemd:
        name: veiltransfer
        enabled: true
        state: started

    - name: Verify veiltransfer service status
      ansible.builtin.command: systemctl is-active veiltransfer
      register: veiltransfer_status
      changed_when: false
      failed_when: veiltransfer_status.stdout != "active"

